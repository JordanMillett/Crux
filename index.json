{
  "api/Crux.Assets.Scenes.DebugScene.html": {
    "href": "api/Crux.Assets.Scenes.DebugScene.html",
    "title": "Class DebugScene | CruxDocs",
    "summary": "Class DebugScene Namespace Crux.Assets.Scenes Assembly Crux.dll public class DebugScene : Scene Inheritance object Scene DebugScene Inherited Members Scene.Skybox Scene.Engine Scene.MainCamera Scene.Ambient Scene.Fog Scene.Hue Scene.FadeStart Scene.FadeEnd Scene.FogStart Scene.FogEnd Scene.Dir Scene.GetDataByteSize() Scene.RenderSkybox() Scene.Recalculate() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Start() public override void Start() Update() public override void Update()"
  },
  "api/Crux.Assets.Scenes.IslandScene.html": {
    "href": "api/Crux.Assets.Scenes.IslandScene.html",
    "title": "Class IslandScene | CruxDocs",
    "summary": "Class IslandScene Namespace Crux.Assets.Scenes Assembly Crux.dll public class IslandScene : Scene Inheritance object Scene IslandScene Inherited Members Scene.Skybox Scene.Engine Scene.MainCamera Scene.Ambient Scene.Fog Scene.Hue Scene.FadeStart Scene.FadeEnd Scene.FogStart Scene.FogEnd Scene.Dir Scene.GetDataByteSize() Scene.RenderSkybox() Scene.Recalculate() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Start() public override void Start() Update() public override void Update()"
  },
  "api/Crux.Assets.Scenes.html": {
    "href": "api/Crux.Assets.Scenes.html",
    "title": "Namespace Crux.Assets.Scenes | CruxDocs",
    "summary": "Namespace Crux.Assets.Scenes Classes DebugScene IslandScene"
  },
  "api/Crux.Components.CameraComponent.html": {
    "href": "api/Crux.Components.CameraComponent.html",
    "title": "Class CameraComponent | CruxDocs",
    "summary": "Class CameraComponent Namespace Crux.Components Assembly Crux.dll public class CameraComponent : Component Inheritance object Component CameraComponent Inherited Members Component.GameObject Component.Transform Component.GetComponent<T>() Component.HasComponent<T>() Component.HandleFrozenStateChanged(bool) Component.Delete() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CameraComponent(GameObject) public CameraComponent(GameObject gameObject) Parameters gameObject GameObject Properties FarPlane public float FarPlane { get; set; } Property Value float NearPlane public float NearPlane { get; set; } Property Value float Methods Clone(GameObject) public override Component Clone(GameObject gameObject) Parameters gameObject GameObject Returns Component IsSphereWithinFarPlane(Vector3, float) public bool IsSphereWithinFarPlane(Vector3 sphereCenter, float sphereRadius) Parameters sphereCenter Vector3 sphereRadius float Returns bool OutsideOfFrustrum(Vector3, Vector3) public bool OutsideOfFrustrum(Vector3 AABBMin, Vector3 AABBMax) Parameters AABBMin Vector3 AABBMax Vector3 Returns bool Recalculate() public void Recalculate() ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Update() public override void Update()"
  },
  "api/Crux.Components.FreeLookComponent.html": {
    "href": "api/Crux.Components.FreeLookComponent.html",
    "title": "Class FreeLookComponent | CruxDocs",
    "summary": "Class FreeLookComponent Namespace Crux.Components Assembly Crux.dll public class FreeLookComponent : Component Inheritance object Component FreeLookComponent Inherited Members Component.GameObject Component.Transform Component.GetComponent<T>() Component.HasComponent<T>() Component.HandleFrozenStateChanged(bool) Component.Delete() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FreeLookComponent(GameObject) public FreeLookComponent(GameObject gameObject) Parameters gameObject GameObject Fields pitch public float pitch Field Value float speed public float speed Field Value float yaw public float yaw Field Value float Methods Clone(GameObject) public override Component Clone(GameObject gameObject) Parameters gameObject GameObject Returns Component Look() public void Look() ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Update() public override void Update()"
  },
  "api/Crux.Components.InstancedMeshRenderComponent.PerInstanceData.html": {
    "href": "api/Crux.Components.InstancedMeshRenderComponent.PerInstanceData.html",
    "title": "Struct InstancedMeshRenderComponent.PerInstanceData | CruxDocs",
    "summary": "Struct InstancedMeshRenderComponent.PerInstanceData Namespace Crux.Components Assembly Crux.dll public struct InstancedMeshRenderComponent.PerInstanceData Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields GPUBufferLength public int GPUBufferLength Field Value int Mat public Shader Mat Field Value Shader Transforms public List<TransformComponent> Transforms Field Value List<TransformComponent>"
  },
  "api/Crux.Components.InstancedMeshRenderComponent.html": {
    "href": "api/Crux.Components.InstancedMeshRenderComponent.html",
    "title": "Class InstancedMeshRenderComponent | CruxDocs",
    "summary": "Class InstancedMeshRenderComponent Namespace Crux.Components Assembly Crux.dll public class InstancedMeshRenderComponent : RenderComponent Inheritance object Component RenderComponent InstancedMeshRenderComponent Inherited Members RenderComponent.OnHiddenStateChanged RenderComponent.IsHidden RenderComponent.Hide() RenderComponent.Unhide() RenderComponent.ContainerNode Component.GameObject Component.Transform Component.GetComponent<T>() Component.HasComponent<T>() Component.Update() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors InstancedMeshRenderComponent(GameObject) public InstancedMeshRenderComponent(GameObject gameObject) Parameters gameObject GameObject Fields BoundsMax public Vector3 BoundsMax Field Value Vector3 BoundsMin public Vector3 BoundsMin Field Value Vector3 InstanceData public static Dictionary<(int vao, int vbo), InstancedMeshRenderComponent.PerInstanceData> InstanceData Field Value Dictionary<(int vao, int vbo), InstancedMeshRenderComponent.PerInstanceData> Rendered public static Dictionary<(int vao, int vbo), bool> Rendered Field Value Dictionary<(int vao, int vbo), bool> Properties MeshVAOs public List<(int vao, int vbo)> MeshVAOs { get; set; } Property Value List<(int vao, int vbo)> Methods Clone(GameObject) public override Component Clone(GameObject gameObject) Parameters gameObject GameObject Returns Component Delete() public override void Delete() HandleFrozenStateChanged(bool) public override void HandleFrozenStateChanged(bool IsFrozen) Parameters IsFrozen bool Render() public override void Render() SetMaterial(Shader, int) public void SetMaterial(Shader mat, int index) Parameters mat Shader index int SetMaterials(List<Shader>) public void SetMaterials(List<Shader> mats) Parameters mats List<Shader> ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Crux.Components.LightComponent.html": {
    "href": "api/Crux.Components.LightComponent.html",
    "title": "Class LightComponent | CruxDocs",
    "summary": "Class LightComponent Namespace Crux.Components Assembly Crux.dll public class LightComponent : Component Inheritance object Component LightComponent Inherited Members Component.GameObject Component.Transform Component.GetComponent<T>() Component.HasComponent<T>() Component.HandleFrozenStateChanged(bool) Component.Update() Component.Delete() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors LightComponent(GameObject) public LightComponent(GameObject gameObject) Parameters gameObject GameObject Fields MAX_LIGHTS public const int MAX_LIGHTS = 4 Field Value int Properties Hue public Color4 Hue { get; set; } Property Value Color4 Intensity public float Intensity { get; set; } Property Value float Methods Clone(GameObject) public override Component Clone(GameObject gameObject) Parameters gameObject GameObject Returns Component GetLightByteSize() public static int GetLightByteSize() Returns int Recalculate() public void Recalculate() ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Crux.Components.LineRenderComponent.html": {
    "href": "api/Crux.Components.LineRenderComponent.html",
    "title": "Class LineRenderComponent | CruxDocs",
    "summary": "Class LineRenderComponent Namespace Crux.Components Assembly Crux.dll public class LineRenderComponent : RenderComponent Inheritance object Component RenderComponent LineRenderComponent Inherited Members RenderComponent.OnHiddenStateChanged RenderComponent.IsHidden RenderComponent.Hide() RenderComponent.Unhide() RenderComponent.ContainerNode Component.GameObject Component.Transform Component.GetComponent<T>() Component.HasComponent<T>() Component.HandleFrozenStateChanged(bool) Component.Update() Component.Delete() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors LineRenderComponent(GameObject) public LineRenderComponent(GameObject gameObject) Parameters gameObject GameObject Fields Color public Color4 Color Field Value Color4 Properties shader public Shader shader { get; set; } Property Value Shader Methods Clone(GameObject) public override Component Clone(GameObject gameObject) Parameters gameObject GameObject Returns Component Render() public override void Render() ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Crux.Components.MeshBoundsColliderComponent.html": {
    "href": "api/Crux.Components.MeshBoundsColliderComponent.html",
    "title": "Class MeshBoundsColliderComponent | CruxDocs",
    "summary": "Class MeshBoundsColliderComponent Namespace Crux.Components Assembly Crux.dll public class MeshBoundsColliderComponent : ColliderComponent Inheritance object Component ColliderComponent MeshBoundsColliderComponent Inherited Members ColliderComponent.OctreeKeys ColliderComponent.SphereCenter ColliderComponent.SphereRadius ColliderComponent.AABBMin ColliderComponent.AABBMax ColliderComponent.HandleFrozenStateChanged(bool) ColliderComponent.Delete() Component.GameObject Component.Transform Component.GetComponent<T>() Component.HasComponent<T>() Component.Update() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MeshBoundsColliderComponent(GameObject) public MeshBoundsColliderComponent(GameObject gameObject) Parameters gameObject GameObject Fields ColliderIndex public int ColliderIndex Field Value int OBBAxes public Vector3[] OBBAxes Field Value Vector3[] OBBCenter public Vector3 OBBCenter Field Value Vector3 OBBHalfExtents public Vector3 OBBHalfExtents Field Value Vector3 Methods Clone(GameObject) public override Component Clone(GameObject gameObject) Parameters gameObject GameObject Returns Component ComputeBounds() public override void ComputeBounds() DistanceFromOBB(Vector3) public float DistanceFromOBB(Vector3 point) Parameters point Vector3 Returns float GetClosestPointOnOBB(Vector3) public Vector3 GetClosestPointOnOBB(Vector3 point) Parameters point Vector3 Returns Vector3 GetClosestPointOnOBB(Vector3, float, float) public Vector3 GetClosestPointOnOBB(Vector3 bestAxis, float overlapStart, float overlapEnd) Parameters bestAxis Vector3 overlapStart float overlapEnd float Returns Vector3 GetWorldEdges() public override List<Vector3> GetWorldEdges() Returns List<Vector3> GetWorldNormals() public override List<Vector3> GetWorldNormals() Returns List<Vector3> GetWorldPoints() public override List<Vector3> GetWorldPoints() Returns List<Vector3> IsPointWithinOBB(Vector3) public bool IsPointWithinOBB(Vector3 point) Parameters point Vector3 Returns bool ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Crux.Components.MeshComponent.html": {
    "href": "api/Crux.Components.MeshComponent.html",
    "title": "Class MeshComponent | CruxDocs",
    "summary": "Class MeshComponent Namespace Crux.Components Assembly Crux.dll public class MeshComponent : Component Inheritance object Component MeshComponent Inherited Members Component.GameObject Component.Transform Component.GetComponent<T>() Component.HasComponent<T>() Component.HandleFrozenStateChanged(bool) Component.Update() Component.Delete() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MeshComponent(GameObject) public MeshComponent(GameObject gameObject) Parameters gameObject GameObject Properties data public Mesh data { get; set; } Property Value Mesh path public string path { get; set; } Property Value string Methods Clone(GameObject) public override Component Clone(GameObject gameObject) Parameters gameObject GameObject Returns Component Load(string) public void Load(string desired) Parameters desired string ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Crux.Components.MeshRenderComponent.html": {
    "href": "api/Crux.Components.MeshRenderComponent.html",
    "title": "Class MeshRenderComponent | CruxDocs",
    "summary": "Class MeshRenderComponent Namespace Crux.Components Assembly Crux.dll public class MeshRenderComponent : RenderComponent Inheritance object Component RenderComponent MeshRenderComponent Inherited Members RenderComponent.OnHiddenStateChanged RenderComponent.IsHidden RenderComponent.Hide() RenderComponent.Unhide() RenderComponent.ContainerNode Component.GameObject Component.Transform Component.GetComponent<T>() Component.HasComponent<T>() Component.Update() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MeshRenderComponent(GameObject) public MeshRenderComponent(GameObject gameObject) Parameters gameObject GameObject Fields VAOKeys public List<string> VAOKeys Field Value List<string> Properties MeshVAOs public List<int> MeshVAOs { get; set; } Property Value List<int> Shaders public List<Shader> Shaders { get; set; } Property Value List<Shader> Methods Clone(GameObject) public override Component Clone(GameObject gameObject) Parameters gameObject GameObject Returns Component Delete() public override void Delete() HandleFrozenStateChanged(bool) public override void HandleFrozenStateChanged(bool IsFrozen) Parameters IsFrozen bool Render() public override void Render() SetShader(Shader, int) public void SetShader(Shader passed, int index) Parameters passed Shader index int SetShaders(List<Shader>) public void SetShaders(List<Shader> passed) Parameters passed List<Shader> ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Crux.Components.MovementComponent.html": {
    "href": "api/Crux.Components.MovementComponent.html",
    "title": "Class MovementComponent | CruxDocs",
    "summary": "Class MovementComponent Namespace Crux.Components Assembly Crux.dll public class MovementComponent : Component Inheritance object Component MovementComponent Inherited Members Component.GameObject Component.Transform Component.GetComponent<T>() Component.HasComponent<T>() Component.HandleFrozenStateChanged(bool) Component.Delete() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MovementComponent(GameObject) public MovementComponent(GameObject gameObject) Parameters gameObject GameObject Methods Clone(GameObject) public override Component Clone(GameObject gameObject) Parameters gameObject GameObject Returns Component ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Update() public override void Update()"
  },
  "api/Crux.Components.PhysicsComponent.html": {
    "href": "api/Crux.Components.PhysicsComponent.html",
    "title": "Class PhysicsComponent | CruxDocs",
    "summary": "Class PhysicsComponent Namespace Crux.Components Assembly Crux.dll public class PhysicsComponent : Component Inheritance object Component PhysicsComponent Inherited Members Component.GameObject Component.Transform Component.GetComponent<T>() Component.HasComponent<T>() Component.HandleFrozenStateChanged(bool) Component.Update() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PhysicsComponent(GameObject) public PhysicsComponent(GameObject gameObject) Parameters gameObject GameObject Fields AngularDrag public float AngularDrag Field Value float AngularKineticFriction public float AngularKineticFriction Field Value float AngularStaticFriction public float AngularStaticFriction Field Value float AngularVelocity public Vector3 AngularVelocity Field Value Vector3 Awake public bool Awake Field Value bool DisableRotation public bool DisableRotation Field Value bool KineticFriction public float KineticFriction Field Value float LinearDrag public float LinearDrag Field Value float Mass public float Mass Field Value float Resitution public float Resitution Field Value float StaticFriction public float StaticFriction Field Value float Velocity public Vector3 Velocity Field Value Vector3 Methods AddForce(Vector3, bool) public void AddForce(Vector3 impulse, bool forceAwake = false) Parameters impulse Vector3 forceAwake bool AddTorque(Vector3, bool) public void AddTorque(Vector3 impulse, bool forceAwake = false) Parameters impulse Vector3 forceAwake bool Clone(GameObject) public override Component Clone(GameObject gameObject) Parameters gameObject GameObject Returns Component Delete() public override void Delete() Integrate() public void Integrate() RespondToCollision(Vector3, Vector3, PhysicsComponent) public void RespondToCollision(Vector3 contactPoint, Vector3 resolution, PhysicsComponent other) Parameters contactPoint Vector3 resolution Vector3 other PhysicsComponent ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Crux.Components.TextRenderComponent.PerInstanceData.html": {
    "href": "api/Crux.Components.TextRenderComponent.PerInstanceData.html",
    "title": "Struct TextRenderComponent.PerInstanceData | CruxDocs",
    "summary": "Struct TextRenderComponent.PerInstanceData Namespace Crux.Components Assembly Crux.dll public struct TextRenderComponent.PerInstanceData Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields CharacterData public List<(Matrix4 model, Vector2 atlasOffset)> CharacterData Field Value List<(Matrix4 model, Vector2 atlasOffset)> GPUBufferLength public int GPUBufferLength Field Value int"
  },
  "api/Crux.Components.TextRenderComponent.html": {
    "href": "api/Crux.Components.TextRenderComponent.html",
    "title": "Class TextRenderComponent | CruxDocs",
    "summary": "Class TextRenderComponent Namespace Crux.Components Assembly Crux.dll public class TextRenderComponent : RenderComponent Inheritance object Component RenderComponent TextRenderComponent Inherited Members RenderComponent.OnHiddenStateChanged RenderComponent.IsHidden RenderComponent.Hide() RenderComponent.Unhide() RenderComponent.ContainerNode Component.GameObject Component.Transform Component.GetComponent<T>() Component.HasComponent<T>() Component.HandleFrozenStateChanged(bool) Component.Update() Component.Delete() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TextRenderComponent(GameObject) public TextRenderComponent(GameObject gameObject) Parameters gameObject GameObject Fields FontScale public float FontScale Field Value float FontVAO public (int vao, int vbo) FontVAO Field Value (int vao, int vbo) InstanceData public static Dictionary<(int vao, int vbo), TextRenderComponent.PerInstanceData> InstanceData Field Value Dictionary<(int vao, int vbo), TextRenderComponent.PerInstanceData> Rendered public static Dictionary<(int vao, int vbo), bool> Rendered Field Value Dictionary<(int vao, int vbo), bool> StartPosition public Vector2 StartPosition Field Value Vector2 Text public string Text Field Value string fontMaterial public static Shader fontMaterial Field Value Shader Methods Clone(GameObject) public override Component Clone(GameObject gameObject) Parameters gameObject GameObject Returns Component Render() public override void Render() ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Crux.Components.TransformComponent.html": {
    "href": "api/Crux.Components.TransformComponent.html",
    "title": "Class TransformComponent | CruxDocs",
    "summary": "Class TransformComponent Namespace Crux.Components Assembly Crux.dll Handles position, rotation, and scale data. public class TransformComponent : Component Inheritance object Component TransformComponent Inherited Members Component.GameObject Component.Transform Component.GetComponent<T>() Component.HasComponent<T>() Component.HandleFrozenStateChanged(bool) Component.Update() Component.Delete() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Remarks Frequently relays updates when data changes. Constructors TransformComponent(GameObject) public TransformComponent(GameObject gameObject) Parameters gameObject GameObject Fields Changed public Action? Changed Field Value Action Properties Forward public Vector3 Forward { get; } Property Value Vector3 LocalEulerAngles public Vector3 LocalEulerAngles { get; set; } Property Value Vector3 LocalPosition public Vector3 LocalPosition { get; set; } Property Value Vector3 LocalRotation public Quaternion LocalRotation { get; set; } Property Value Quaternion ModelMatrix public Matrix4 ModelMatrix { get; } Property Value Matrix4 Parent public TransformComponent Parent { get; set; } Property Value TransformComponent Right public Vector3 Right { get; } Property Value Vector3 Scale public Vector3 Scale { get; set; } Property Value Vector3 Up public Vector3 Up { get; } Property Value Vector3 WorldEulerAngles public Vector3 WorldEulerAngles { get; set; } Property Value Vector3 WorldPosition public Vector3 WorldPosition { get; set; } Property Value Vector3 WorldRotation public Quaternion WorldRotation { get; set; } Property Value Quaternion Methods Clone(GameObject) public override Component Clone(GameObject gameObject) Parameters gameObject GameObject Returns Component ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Crux.Components.html": {
    "href": "api/Crux.Components.html",
    "title": "Namespace Crux.Components | CruxDocs",
    "summary": "Namespace Crux.Components Classes CameraComponent FreeLookComponent InstancedMeshRenderComponent LightComponent LineRenderComponent MeshBoundsColliderComponent MeshComponent MeshRenderComponent MovementComponent PhysicsComponent TextRenderComponent TransformComponent Handles position, rotation, and scale data. Structs InstancedMeshRenderComponent.PerInstanceData TextRenderComponent.PerInstanceData"
  },
  "api/Crux.Core.ColliderComponent.html": {
    "href": "api/Crux.Core.ColliderComponent.html",
    "title": "Class ColliderComponent | CruxDocs",
    "summary": "Class ColliderComponent Namespace Crux.Core Assembly Crux.dll public abstract class ColliderComponent : Component Inheritance object Component ColliderComponent Derived MeshBoundsColliderComponent Inherited Members Component.GameObject Component.Transform Component.GetComponent<T>() Component.HasComponent<T>() Component.ToString() Component.Clone(GameObject) Component.Update() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ColliderComponent(GameObject) public ColliderComponent(GameObject gameObject) Parameters gameObject GameObject Fields AABBMax public Vector3 AABBMax Field Value Vector3 AABBMin public Vector3 AABBMin Field Value Vector3 OctreeKeys public (Vector3 MinKey, Vector3 MaxKey) OctreeKeys Field Value (Vector3 MinKey, Vector3 MaxKey) SphereCenter public Vector3 SphereCenter Field Value Vector3 SphereRadius public float SphereRadius Field Value float Methods ComputeBounds() public abstract void ComputeBounds() Delete() public override void Delete() GetWorldEdges() public abstract List<Vector3> GetWorldEdges() Returns List<Vector3> GetWorldNormals() public abstract List<Vector3> GetWorldNormals() Returns List<Vector3> GetWorldPoints() public abstract List<Vector3> GetWorldPoints() Returns List<Vector3> HandleFrozenStateChanged(bool) public override void HandleFrozenStateChanged(bool IsFrozen) Parameters IsFrozen bool"
  },
  "api/Crux.Core.Component.html": {
    "href": "api/Crux.Core.Component.html",
    "title": "Class Component | CruxDocs",
    "summary": "Class Component Namespace Crux.Core Assembly Crux.dll public abstract class Component Inheritance object Component Derived CameraComponent FreeLookComponent LightComponent MeshComponent MovementComponent PhysicsComponent TransformComponent ColliderComponent RenderComponent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Component(GameObject) public Component(GameObject gameObject) Parameters gameObject GameObject Properties GameObject public GameObject GameObject { get; init; } Property Value GameObject Transform public TransformComponent Transform { get; } Property Value TransformComponent Methods Clone(GameObject) public abstract Component Clone(GameObject gameObject) Parameters gameObject GameObject Returns Component Delete() public virtual void Delete() GetComponent<T>() public T GetComponent<T>() where T : Component Returns T Type Parameters T HandleFrozenStateChanged(bool) public virtual void HandleFrozenStateChanged(bool IsFrozen) Parameters IsFrozen bool HasComponent<T>() public bool HasComponent<T>() where T : Component Returns bool Type Parameters T ToString() Returns a string that represents the current object. public override abstract string ToString() Returns string A string that represents the current object. Update() public virtual void Update()"
  },
  "api/Crux.Core.GameEngine.html": {
    "href": "api/Crux.Core.GameEngine.html",
    "title": "Class GameEngine | CruxDocs",
    "summary": "Class GameEngine Namespace Crux.Core Assembly Crux.dll public class GameEngine : GameWindow, IDisposable Inheritance object NativeWindow GameWindow GameEngine Implements IDisposable Inherited Members GameWindow.Run() GameWindow.SwapBuffers() GameWindow.Close() GameWindow.OnRenderThreadStarted() GameWindow.TimeSinceLastUpdate() GameWindow.ResetTimeSinceLastUpdate() GameWindow.Dispose() GameWindow.IsRunningSlowly GameWindow.IsMultiThreaded GameWindow.RenderFrequency GameWindow.RenderTime GameWindow.UpdateTime GameWindow.UpdateFrequency GameWindow.ExpectedSchedulerPeriod GameWindow.Load GameWindow.Unload GameWindow.UpdateFrame GameWindow.RenderThreadStarted GameWindow.RenderFrame NativeWindow.Focus() NativeWindow.MakeCurrent() NativeWindow.ProcessEvents(double) NativeWindow.ProcessWindowEvents(bool) NativeWindow.NewInputFrame() NativeWindow.PointToClient(Vector2i) NativeWindow.PointToScreen(Vector2i) NativeWindow.IsKeyDown(Keys) NativeWindow.IsKeyPressed(Keys) NativeWindow.IsKeyReleased(Keys) NativeWindow.IsMouseButtonDown(MouseButton) NativeWindow.IsMouseButtonPressed(MouseButton) NativeWindow.IsMouseButtonReleased(MouseButton) NativeWindow.TryGetCurrentMonitorScale(out float, out float) NativeWindow.TryGetCurrentMonitorDpi(out float, out float) NativeWindow.TryGetCurrentMonitorDpiRaw(out float, out float) NativeWindow.OnMove(WindowPositionEventArgs) NativeWindow.OnFramebufferResize(FramebufferResizeEventArgs) NativeWindow.OnRefresh() NativeWindow.OnClosing(CancelEventArgs) NativeWindow.OnJoystickConnected(JoystickEventArgs) NativeWindow.OnFocusedChanged(FocusedChangedEventArgs) NativeWindow.OnKeyDown(KeyboardKeyEventArgs) NativeWindow.OnTextInput(TextInputEventArgs) NativeWindow.OnKeyUp(KeyboardKeyEventArgs) NativeWindow.OnMouseLeave() NativeWindow.OnMouseEnter() NativeWindow.OnMouseDown(MouseButtonEventArgs) NativeWindow.OnMouseUp(MouseButtonEventArgs) NativeWindow.OnMouseMove(MouseMoveEventArgs) NativeWindow.OnMouseWheel(MouseWheelEventArgs) NativeWindow.OnMinimized(MinimizedEventArgs) NativeWindow.OnMaximized(MaximizedEventArgs) NativeWindow.OnFileDrop(FileDropEventArgs) NativeWindow.Dispose(bool) NativeWindow.CenterWindow() NativeWindow.CenterWindow(Vector2i) NativeWindow.WindowPtr NativeWindow.KeyboardState NativeWindow.JoystickStates NativeWindow.MousePosition NativeWindow.MouseState NativeWindow.IsAnyKeyDown NativeWindow.IsAnyMouseButtonDown NativeWindow.VSync NativeWindow.AutoIconify NativeWindow.Icon NativeWindow.IsEventDriven NativeWindow.ClipboardString NativeWindow.Title NativeWindow.API NativeWindow.Profile NativeWindow.Flags NativeWindow.APIVersion NativeWindow.Context NativeWindow.CurrentMonitor NativeWindow.IsFocused NativeWindow.IsVisible NativeWindow.Exists NativeWindow.IsExiting NativeWindow.WindowState NativeWindow.WindowBorder NativeWindow.Bounds NativeWindow.Location NativeWindow.ClientLocation NativeWindow.Size NativeWindow.ClientSize NativeWindow.FramebufferSize NativeWindow.MinimumSize NativeWindow.MaximumSize NativeWindow.AspectRatio NativeWindow.ClientRectangle NativeWindow.IsFullscreen NativeWindow.Cursor NativeWindow.CursorState NativeWindow.RawMouseInput NativeWindow.SupportsRawMouseInput NativeWindow.HasTransparentFramebuffer NativeWindow.Move NativeWindow.Resize NativeWindow.FramebufferResize NativeWindow.Refresh NativeWindow.Closing NativeWindow.Minimized NativeWindow.Maximized NativeWindow.JoystickConnected NativeWindow.FocusedChanged NativeWindow.KeyDown NativeWindow.TextInput NativeWindow.KeyUp NativeWindow.MouseLeave NativeWindow.MouseEnter NativeWindow.MouseDown NativeWindow.MouseUp NativeWindow.MouseMove NativeWindow.MouseWheel NativeWindow.FileDrop object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GameEngine(GameWindowSettings, NativeWindowSettings) public GameEngine(GameWindowSettings gameWindowSettings, NativeWindowSettings nativeWindowSettings) Parameters gameWindowSettings GameWindowSettings nativeWindowSettings NativeWindowSettings Fields ActiveScene public Scene ActiveScene Field Value Scene BuildNumber public static int BuildNumber Field Value int Camera public CameraComponent Camera Field Value CameraComponent DebugDisplayPositions public List<Vector3> DebugDisplayPositions Field Value List<Vector3> DebugHUD public TextRenderComponent DebugHUD Field Value TextRenderComponent Instantiated public List<GameObject> Instantiated Field Value List<GameObject> OnEngineReadyCallback public Action? OnEngineReadyCallback Field Value Action Resolution public Vector2i Resolution Field Value Vector2i Version public static readonly VersionData Version Field Value VersionData deltaTime public float deltaTime Field Value float fixedDeltaTime public float fixedDeltaTime Field Value float fixedTotalTime public float fixedTotalTime Field Value float totalTime public float totalTime Field Value float Properties Link public static GameEngine Link { get; } Property Value GameEngine Methods CloneGameObject(GameObject) public GameObject CloneGameObject(GameObject toCopy) Parameters toCopy GameObject Returns GameObject GetEngineShortName() public static string GetEngineShortName() Returns string GetGameShortName() public static string GetGameShortName() Returns string GetWindowShortName() public static string GetWindowShortName() Returns string InDebugMode() public static bool InDebugMode() Returns bool InstantiateGameObject(string) public GameObject InstantiateGameObject(string name = \"\") Parameters name string Returns GameObject OnLoad() Run immediately after Run() is called. protected override void OnLoad() OnRenderFrame(FrameEventArgs) Run when the window is ready to render. This is called after OpenTK.Windowing.Desktop.GameWindow.OnUpdateFrame(OpenTK.Windowing.Common.FrameEventArgs). protected override void OnRenderFrame(FrameEventArgs e) Parameters e FrameEventArgs OnResize(ResizeEventArgs) Raises the OpenTK.Windowing.Desktop.NativeWindow.Resize event. protected override void OnResize(ResizeEventArgs e) Parameters e ResizeEventArgs A OpenTK.Windowing.Common.ResizeEventArgs that contains the event data. OnUnload() Run when the window is about to close. protected override void OnUnload() OnUpdateFrame(FrameEventArgs) Run when the window is ready to update. This is called before OpenTK.Windowing.Desktop.GameWindow.OnRenderFrame(OpenTK.Windowing.Common.FrameEventArgs). protected override void OnUpdateFrame(FrameEventArgs e) Parameters e FrameEventArgs Events OnUpdateCallback public event Action? OnUpdateCallback Event Type Action"
  },
  "api/Crux.Core.GameObject.html": {
    "href": "api/Crux.Core.GameObject.html",
    "title": "Class GameObject | CruxDocs",
    "summary": "Class GameObject Namespace Crux.Core Assembly Crux.dll public class GameObject Inheritance object GameObject Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GameObject(string) public GameObject(string name) Parameters name string Fields Name public string Name Field Value string Properties IsFrozen public bool IsFrozen { get; } Property Value bool Transform public TransformComponent Transform { get; } Property Value TransformComponent Methods AddComponent<T>() Adds a specified concrete type as a new component that is attached to the GameObject. public T? AddComponent<T>() where T : Component Returns T The newly created component, the existing component of the same concrete type, or null if adding the component failed. Type Parameters T Remarks Null will be returned if the GameObject contains a conflicting component. Clone() public GameObject Clone() Returns GameObject Delete() public void Delete() Freeze() public void Freeze() GetComponent<T>() Returns a specified concrete type if it is attached to the GameObject. A concrete type or an abstract type can be passed. public T? GetComponent<T>() where T : Component Returns T Type Parameters T Remarks Null will be returned if the GameObject does not contain a concrete type that matches either the specified concrete type or a child of the specified abstract type. HasComponentOrSibling<T>() Returns true if the GameObject contains a concrete component that matches either the specified concrete type, a sibling of the specified concrete type, or a child of the specified abstract type. public bool HasComponentOrSibling<T>() where T : Component Returns bool Type Parameters T Remarks If the specified abstract type is 'Component' then true will be returned if any concrete component exist. HasComponent<T>() Returns true if the GameObject contains a concrete component that matches either the specified concrete type, or a child of the specified abstract type. public bool HasComponent<T>() where T : Component Returns bool Type Parameters T Remarks If the specified abstract type is 'Component' then true will be returned if any concrete component exist. RemoveComponent<T>() Removes a specified concrete component that is attached to the GameObject. Removes a child component if an abstract type is specified. public void RemoveComponent<T>() where T : Component Type Parameters T Remarks Nothing will be removed if no concrete matches are found. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Unfreeze() public void Unfreeze() Update() public void Update() Events OnFrozenStateChanged public event Action<bool> OnFrozenStateChanged Event Type Action<bool>"
  },
  "api/Crux.Core.LogSource.html": {
    "href": "api/Crux.Core.LogSource.html",
    "title": "Enum LogSource | CruxDocs",
    "summary": "Enum LogSource Namespace Crux.Core Assembly Crux.dll public enum LogSource Fields Error = 3 System = 1 User = 0 Warning = 2"
  },
  "api/Crux.Core.Logger.html": {
    "href": "api/Crux.Core.Logger.html",
    "title": "Class Logger | CruxDocs",
    "summary": "Class Logger Namespace Crux.Core Assembly Crux.dll public static class Logger Inheritance object Logger Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields StartTime public static readonly DateTime StartTime Field Value DateTime Methods Log(string, LogSource) public static void Log(string message, LogSource source = LogSource.User) Parameters message string source LogSource LogError(Exception) public static void LogError(Exception ex) Parameters ex Exception LogWarning(string) public static void LogWarning(string message) Parameters message string Log<T>(T, LogSource) public static void Log<T>(T obj, LogSource source = LogSource.User) Parameters obj T source LogSource Type Parameters T"
  },
  "api/Crux.Core.Presets.html": {
    "href": "api/Crux.Core.Presets.html",
    "title": "Class Presets | CruxDocs",
    "summary": "Class Presets Namespace Crux.Core Assembly Crux.dll public static class Presets Inheritance object Presets Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods MakeColliderObject(string, List<string>) public static GameObject MakeColliderObject(string model, List<string> textures) Parameters model string textures List<string> Returns GameObject MakeColliderObject(string, string) public static GameObject MakeColliderObject(string model, string texture) Parameters model string texture string Returns GameObject MakeObject(string, List<string>) public static GameObject MakeObject(string model, List<string> textures) Parameters model string textures List<string> Returns GameObject MakeObject(string, string) public static GameObject MakeObject(string model, string texture) Parameters model string texture string Returns GameObject MakePhysicsPrimitive(Primitives, string) public static GameObject MakePhysicsPrimitive(Primitives model, string texture) Parameters model Primitives texture string Returns GameObject MakePrimitive(Primitives, string) public static GameObject MakePrimitive(Primitives model, string texture) Parameters model Primitives texture string Returns GameObject"
  },
  "api/Crux.Core.Primitives.html": {
    "href": "api/Crux.Core.Primitives.html",
    "title": "Enum Primitives | CruxDocs",
    "summary": "Enum Primitives Namespace Crux.Core Assembly Crux.dll public enum Primitives Fields Cone = 1 Cube = 0 Cylinder = 2 Quad = 3 Sphere = 4 Torus = 5"
  },
  "api/Crux.Core.RenderComponent.html": {
    "href": "api/Crux.Core.RenderComponent.html",
    "title": "Class RenderComponent | CruxDocs",
    "summary": "Class RenderComponent Namespace Crux.Core Assembly Crux.dll public abstract class RenderComponent : Component Inheritance object Component RenderComponent Derived InstancedMeshRenderComponent LineRenderComponent MeshRenderComponent TextRenderComponent Inherited Members Component.GameObject Component.Transform Component.GetComponent<T>() Component.HasComponent<T>() Component.ToString() Component.Clone(GameObject) Component.HandleFrozenStateChanged(bool) Component.Update() Component.Delete() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RenderComponent(GameObject) public RenderComponent(GameObject gameObject) Parameters gameObject GameObject Fields ContainerNode public OctreeNode ContainerNode Field Value OctreeNode Properties IsHidden public bool IsHidden { get; } Property Value bool Methods Hide() public void Hide() Render() public abstract void Render() Unhide() public void Unhide() Events OnHiddenStateChanged public event Action<bool> OnHiddenStateChanged Event Type Action<bool>"
  },
  "api/Crux.Core.Scene.html": {
    "href": "api/Crux.Core.Scene.html",
    "title": "Class Scene | CruxDocs",
    "summary": "Class Scene Namespace Crux.Core Assembly Crux.dll public abstract class Scene Inheritance object Scene Derived DebugScene IslandScene Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Scene() public Scene() Fields Skybox public Shader Skybox Field Value Shader Properties Ambient public Color4 Ambient { get; set; } Property Value Color4 Dir public Vector3 Dir { get; set; } Property Value Vector3 Engine public static GameEngine Engine { get; } Property Value GameEngine FadeEnd public float FadeEnd { get; set; } Property Value float FadeStart public float FadeStart { get; set; } Property Value float Fog public Color4 Fog { get; set; } Property Value Color4 FogEnd public float FogEnd { get; set; } Property Value float FogStart public float FogStart { get; set; } Property Value float Hue public Color4 Hue { get; set; } Property Value Color4 MainCamera public static CameraComponent MainCamera { get; } Property Value CameraComponent Methods GetDataByteSize() public static int GetDataByteSize() Returns int Recalculate() public void Recalculate() RenderSkybox() public void RenderSkybox() Start() public abstract void Start() Update() public abstract void Update()"
  },
  "api/Crux.Core.html": {
    "href": "api/Crux.Core.html",
    "title": "Namespace Crux.Core | CruxDocs",
    "summary": "Namespace Crux.Core Classes ColliderComponent Component GameEngine GameObject Logger Presets RenderComponent Scene Enums LogSource Primitives"
  },
  "api/Crux.Graphics.GraphicsCache.html": {
    "href": "api/Crux.Graphics.GraphicsCache.html",
    "title": "Class GraphicsCache | CruxDocs",
    "summary": "Class GraphicsCache Namespace Crux.Graphics Assembly Crux.dll public static class GraphicsCache Inheritance object GraphicsCache Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DrawCallsThisFrame public static int DrawCallsThisFrame Field Value int FramesPerSecond public static float FramesPerSecond Field Value float MeshDrawCallsThisFrame public static int MeshDrawCallsThisFrame Field Value int Tree public static Octree Tree Field Value Octree Methods GetFragmentShader(string) public static int GetFragmentShader(string path) Parameters path string Returns int GetFullInfo() public static string GetFullInfo() Returns string GetInstancedMeshVAO(string, Mesh) public static (int vao, int vbo) GetInstancedMeshVAO(string path, Mesh mesh) Parameters path string mesh Mesh Returns (int vao, int vbo) GetInstancedUIVAO() public static (int vao, int vbo) GetInstancedUIVAO() Returns (int vao, int vbo) GetLineVAO(string, List<Vector3>) public static int GetLineVAO(string path, List<Vector3> points) Parameters path string points List<Vector3> Returns int GetMeshVAO(string, Mesh) public static int GetMeshVAO(string path, Mesh mesh) Parameters path string mesh Mesh Returns int GetProgram((int vert, int frag)) public static int GetProgram((int vert, int frag) ids) Parameters ids (int vao, int vbo) Returns int GetShortInfo() public static string GetShortInfo() Returns string GetSkyboxVAO() public static int GetSkyboxVAO() Returns int GetTexture(string) public static int GetTexture(string path) Parameters path string Returns int GetUIVAO() public static int GetUIVAO() Returns int GetVertexShader(string) public static int GetVertexShader(string path) Parameters path string Returns int RemoveFragmentUser(string) public static void RemoveFragmentUser(string path) Parameters path string RemoveInstancedVAO(string) public static void RemoveInstancedVAO(string path) Parameters path string RemoveProgramUser((int vert, int frag)) public static void RemoveProgramUser((int vert, int frag) ids) Parameters ids (int vao, int vbo) RemoveTextureUser(string) public static void RemoveTextureUser(string path) Parameters path string RemoveVAO(string) public static void RemoveVAO(string path) Parameters path string RemoveVertexUser(string) public static void RemoveVertexUser(string path) Parameters path string"
  },
  "api/Crux.Graphics.Mesh.html": {
    "href": "api/Crux.Graphics.Mesh.html",
    "title": "Class Mesh | CruxDocs",
    "summary": "Class Mesh Namespace Crux.Graphics Assembly Crux.dll public class Mesh Inheritance object Mesh Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Mesh(uint[], Vertex[]) public Mesh(uint[] indices, Vertex[] vertices) Parameters indices uint[] vertices Vertex[] Fields OffsetFromCenter public Vector3 OffsetFromCenter Field Value Vector3 Properties Indices public uint[] Indices { get; } Property Value uint[] MaxBounds public Vector3 MaxBounds { get; set; } Property Value Vector3 MinBounds public Vector3 MinBounds { get; set; } Property Value Vector3 Submeshes public List<Mesh> Submeshes { get; set; } Property Value List<Mesh> Vertices public Vertex[] Vertices { get; } Property Value Vertex[] Methods CalculateBoundsAndOffsets() public void CalculateBoundsAndOffsets() Clone() public Mesh Clone() Returns Mesh GetInterleavedVertexData() public float[] GetInterleavedVertexData() Returns float[] GetRandomPositionOnMesh(Random) public Vector3 GetRandomPositionOnMesh(Random random) Parameters random Random Returns Vector3 GetWorldSpaceAABB(Matrix4) public (Vector3 min, Vector3 max) GetWorldSpaceAABB(Matrix4 modelMatrix) Parameters modelMatrix Matrix4 Returns (Vector3 MinKey, Vector3 MaxKey) GetWorldSpaceOBB(Matrix4) public (Vector3 center, Vector3[] axes, Vector3 halfExtents) GetWorldSpaceOBB(Matrix4 modelMatrix) Parameters modelMatrix Matrix4 Returns (Vector3 center, Vector3[] axes, Vector3 halfExtents)"
  },
  "api/Crux.Graphics.Plane.html": {
    "href": "api/Crux.Graphics.Plane.html",
    "title": "Struct Plane | CruxDocs",
    "summary": "Struct Plane Namespace Crux.Graphics Assembly Crux.dll public struct Plane Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors Plane(Vector3, float) public Plane(Vector3 normal, float distance) Parameters normal Vector3 distance float Plane(Vector4) public Plane(Vector4 row) Parameters row Vector4 Properties Distance public float Distance { readonly get; set; } Property Value float Normal public Vector3 Normal { readonly get; set; } Property Value Vector3 Methods Clone() public Plane Clone() Returns Plane Normalize() public void Normalize()"
  },
  "api/Crux.Graphics.Shader.html": {
    "href": "api/Crux.Graphics.Shader.html",
    "title": "Class Shader | CruxDocs",
    "summary": "Class Shader Namespace Crux.Graphics Assembly Crux.dll public class Shader Inheritance object Shader Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Shader(string, string, string) public Shader(string vertexShaderPath, string fragmentShaderPath, string colorTexturePath) Parameters vertexShaderPath string fragmentShaderPath string colorTexturePath string Properties ColorTexturePath public string ColorTexturePath { get; init; } Property Value string FragmentShaderPath public string FragmentShaderPath { get; init; } Property Value string TextureHue public Color4 TextureHue { get; set; } Property Value Color4 VertexShaderPath public string VertexShaderPath { get; init; } Property Value string Methods Bind() public void Bind() Clone() public Shader Clone() Returns Shader Delete() public void Delete() SetUniform(string, object) public void SetUniform(string uniformName, object value) Parameters uniformName string value object Unbind() public void Unbind()"
  },
  "api/Crux.Graphics.Shapes.html": {
    "href": "api/Crux.Graphics.Shapes.html",
    "title": "Class Shapes | CruxDocs",
    "summary": "Class Shapes Namespace Crux.Graphics Assembly Crux.dll public static class Shapes Inheritance object Shapes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields LineAnchor public static List<Vector3> LineAnchor Field Value List<Vector3> LineBounds public static List<Vector3> LineBounds Field Value List<Vector3>"
  },
  "api/Crux.Graphics.Vertex.html": {
    "href": "api/Crux.Graphics.Vertex.html",
    "title": "Struct Vertex | CruxDocs",
    "summary": "Struct Vertex Namespace Crux.Graphics Assembly Crux.dll public struct Vertex Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors Vertex(Vector3, Vector3, Vector2) public Vertex(Vector3 position, Vector3 normal, Vector2 uv) Parameters position Vector3 normal Vector3 uv Vector2 Properties Normal public readonly Vector3 Normal { get; } Property Value Vector3 Position public readonly Vector3 Position { get; } Property Value Vector3 UV public readonly Vector2 UV { get; } Property Value Vector2 Methods Clone() public Vertex Clone() Returns Vertex"
  },
  "api/Crux.Graphics.html": {
    "href": "api/Crux.Graphics.html",
    "title": "Namespace Crux.Graphics | CruxDocs",
    "summary": "Namespace Crux.Graphics Classes GraphicsCache Mesh Shader Shapes Structs Plane Vertex"
  },
  "api/Crux.Physics.Octree.html": {
    "href": "api/Crux.Physics.Octree.html",
    "title": "Class Octree | CruxDocs",
    "summary": "Class Octree Namespace Crux.Physics Assembly Crux.dll public class Octree Inheritance object Octree Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Octree(Vector3, Vector3, int, string) public Octree(Vector3 min, Vector3 max, int maxDepth = 7, string octreeName = \"Octree\") Parameters min Vector3 max Vector3 maxDepth int octreeName string Fields MaxDepth public readonly int MaxDepth Field Value int OctreeName public readonly string OctreeName Field Value string Root public OctreeNode Root Field Value OctreeNode Methods FindNearbyNodes(Vector3, Vector3) public List<Component> FindNearbyNodes(Vector3 min, Vector3 max) Parameters min Vector3 max Vector3 Returns List<Component> RecalculateVisibility() public void RecalculateVisibility() RegisterComponentGetAABB(Component, Vector3, Vector3) public (Vector3 MinKey, Vector3 MaxKey) RegisterComponentGetAABB(Component component, Vector3 min, Vector3 max) Parameters component Component min Vector3 max Vector3 Returns (Vector3 MinKey, Vector3 MaxKey) RegisterComponentGetNode(Component, Vector3, Vector3) public OctreeNode RegisterComponentGetNode(Component component, Vector3 min, Vector3 max) Parameters component Component min Vector3 max Vector3 Returns OctreeNode UnregisterComponent(Component, (Vector3 minKey, Vector3 maxKey)) public void UnregisterComponent(Component component, (Vector3 minKey, Vector3 maxKey) octreeKeys) Parameters component Component octreeKeys (Vector3 MinKey, Vector3 MaxKey)"
  },
  "api/Crux.Physics.OctreeNode.html": {
    "href": "api/Crux.Physics.OctreeNode.html",
    "title": "Class OctreeNode | CruxDocs",
    "summary": "Class OctreeNode Namespace Crux.Physics Assembly Crux.dll public class OctreeNode Inheritance object OctreeNode Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors OctreeNode(Vector3, Vector3) public OctreeNode(Vector3 min, Vector3 max) Parameters min Vector3 max Vector3 Fields Components public List<Component> Components Field Value List<Component> Culled public bool Culled Field Value bool Max public Vector3 Max Field Value Vector3 Min public Vector3 Min Field Value Vector3 Octants public OctreeNode[]? Octants Field Value OctreeNode[] Properties IsLeaf public bool IsLeaf { get; } Property Value bool Methods Divide() public void Divide()"
  },
  "api/Crux.Physics.PhysicsSystem.html": {
    "href": "api/Crux.Physics.PhysicsSystem.html",
    "title": "Class PhysicsSystem | CruxDocs",
    "summary": "Class PhysicsSystem Namespace Crux.Physics Assembly Crux.dll public static class PhysicsSystem Inheritance object PhysicsSystem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AABBChecks public static int AABBChecks Field Value int FramesPerSecond public static float FramesPerSecond Field Value float Gravity public static Vector3 Gravity Field Value Vector3 IntegratingAndComputing public static bool IntegratingAndComputing Field Value bool OBBChecks public static int OBBChecks Field Value int PhysicsFrameCount public static int PhysicsFrameCount Field Value int SphereChecks public static int SphereChecks Field Value int TotalColliders public static int TotalColliders Field Value int TotalPhysicsObjects public static int TotalPhysicsObjects Field Value int Tree public static Octree Tree Field Value Octree Methods CheckAABB(ColliderComponent, ColliderComponent) public static bool CheckAABB(ColliderComponent a, ColliderComponent b) Parameters a ColliderComponent b ColliderComponent Returns bool CheckSphere(ColliderComponent, ColliderComponent) public static bool CheckSphere(ColliderComponent a, ColliderComponent b) Parameters a ColliderComponent b ColliderComponent Returns bool GetShortInfo() public static string GetShortInfo() Returns string MergeDictionaries() public static void MergeDictionaries() Raycast(Ray, out RayHit) public static bool Raycast(Ray ray, out RayHit hit) Parameters ray Ray hit RayHit Returns bool RaycastAll(Ray, out List<RayHit>) public static bool RaycastAll(Ray ray, out List<RayHit> hits) Parameters ray Ray hits List<RayHit> Returns bool RegisterColliderObject(ColliderComponent) public static void RegisterColliderObject(ColliderComponent col) Parameters col ColliderComponent RegisterPhysicsObject(ColliderComponent, PhysicsComponent) public static void RegisterPhysicsObject(ColliderComponent col, PhysicsComponent phy) Parameters col ColliderComponent phy PhysicsComponent UnregisterColliderObject(ColliderComponent) public static void UnregisterColliderObject(ColliderComponent col) Parameters col ColliderComponent UnregisterPhysicsObject(ColliderComponent, PhysicsComponent) public static void UnregisterPhysicsObject(ColliderComponent col, PhysicsComponent phy) Parameters col ColliderComponent phy PhysicsComponent Update() public static void Update()"
  },
  "api/Crux.Physics.Ray.html": {
    "href": "api/Crux.Physics.Ray.html",
    "title": "Struct Ray | CruxDocs",
    "summary": "Struct Ray Namespace Crux.Physics Assembly Crux.dll public struct Ray Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors Ray(Vector3, Vector3, float) public Ray(Vector3 origin, Vector3 direction, float range = 3.4028235E+38) Parameters origin Vector3 direction Vector3 range float Fields Direction public Vector3 Direction Field Value Vector3 Origin public Vector3 Origin Field Value Vector3 Range public float Range Field Value float"
  },
  "api/Crux.Physics.RayHit.html": {
    "href": "api/Crux.Physics.RayHit.html",
    "title": "Struct RayHit | CruxDocs",
    "summary": "Struct RayHit Namespace Crux.Physics Assembly Crux.dll public struct RayHit Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors RayHit(ColliderComponent, float, Vector3) public RayHit(ColliderComponent collider, float distance, Vector3 point) Parameters collider ColliderComponent distance float point Vector3 Fields Collider public ColliderComponent Collider Field Value ColliderComponent Distance public float Distance Field Value float Point public Vector3 Point Field Value Vector3"
  },
  "api/Crux.Physics.html": {
    "href": "api/Crux.Physics.html",
    "title": "Namespace Crux.Physics | CruxDocs",
    "summary": "Namespace Crux.Physics Classes Octree OctreeNode PhysicsSystem Structs Ray RayHit"
  },
  "api/Crux.Utilities.Color4JsonConverter.html": {
    "href": "api/Crux.Utilities.Color4JsonConverter.html",
    "title": "Class Color4JsonConverter | CruxDocs",
    "summary": "Class Color4JsonConverter Namespace Crux.Utilities Assembly Crux.dll public class Color4JsonConverter : JsonConverter<Color4> Inheritance object JsonConverter JsonConverter<Color4> Color4JsonConverter Inherited Members JsonConverter<Color4>.CanConvert(Type) JsonConverter<Color4>.ReadAsPropertyName(ref Utf8JsonReader, Type, JsonSerializerOptions) JsonConverter<Color4>.WriteAsPropertyName(Utf8JsonWriter, Color4, JsonSerializerOptions) JsonConverter<Color4>.HandleNull JsonConverter<Color4>.Type object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Read(ref Utf8JsonReader, Type, JsonSerializerOptions) Reads and converts the JSON to type OpenTK.Mathematics.Color4. public override Color4 Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) Parameters reader Utf8JsonReader The reader. typeToConvert Type The type to convert. options JsonSerializerOptions An object that specifies serialization options to use. Returns Color4 The converted value. Write(Utf8JsonWriter, Color4, JsonSerializerOptions) Writes a specified value as JSON. public override void Write(Utf8JsonWriter writer, Color4 value, JsonSerializerOptions options) Parameters writer Utf8JsonWriter The writer to write to. value Color4 The value to convert to JSON. options JsonSerializerOptions An object that specifies serialization options to use."
  },
  "api/Crux.Utilities.Helpers.ColorHelper.html": {
    "href": "api/Crux.Utilities.Helpers.ColorHelper.html",
    "title": "Class ColorHelper | CruxDocs",
    "summary": "Class ColorHelper Namespace Crux.Utilities.Helpers Assembly Crux.dll public static class ColorHelper Inheritance object ColorHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Flatten(Color4) public static float[] Flatten(Color4 input) Parameters input Color4 Returns float[] HexToColor4(string) public static Color4 HexToColor4(string hex) Parameters hex string Returns Color4"
  },
  "api/Crux.Utilities.Helpers.MatrixHelper.html": {
    "href": "api/Crux.Utilities.Helpers.MatrixHelper.html",
    "title": "Class MatrixHelper | CruxDocs",
    "summary": "Class MatrixHelper Namespace Crux.Utilities.Helpers Assembly Crux.dll public static class MatrixHelper Inheritance object MatrixHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateRotationMatrixFromAxes(Vector3[]) public static Matrix4 CreateRotationMatrixFromAxes(Vector3[] axes) Parameters axes Vector3[] Returns Matrix4 Decompose(Matrix4, out Vector3, out Quaternion, out Vector3) public static void Decompose(Matrix4 matrix, out Vector3 scale, out Quaternion rotation, out Vector3 translation) Parameters matrix Matrix4 scale Vector3 rotation Quaternion translation Vector3 ExtractRotation(Matrix4) public static Matrix3 ExtractRotation(Matrix4 matrix) Parameters matrix Matrix4 Returns Matrix3 ExtractRotationAsMatrix4(Matrix4) public static Matrix4 ExtractRotationAsMatrix4(Matrix4 matrix) Parameters matrix Matrix4 Returns Matrix4 ExtractRotationScale(Matrix4) public static Matrix3 ExtractRotationScale(Matrix4 matrix) Parameters matrix Matrix4 Returns Matrix3 Matrix4ToArray(Matrix4) public static float[] Matrix4ToArray(Matrix4 matrix) Parameters matrix Matrix4 Returns float[] Transpose(Matrix3) public static Matrix3 Transpose(Matrix3 matrix) Parameters matrix Matrix3 Returns Matrix3"
  },
  "api/Crux.Utilities.Helpers.VectorHelper.html": {
    "href": "api/Crux.Utilities.Helpers.VectorHelper.html",
    "title": "Class VectorHelper | CruxDocs",
    "summary": "Class VectorHelper Namespace Crux.Utilities.Helpers Assembly Crux.dll public static class VectorHelper Inheritance object VectorHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Flatten(Vector3) public static float[] Flatten(Vector3 input) Parameters input Vector3 Returns float[] IsVectorNaN(Vector3) public static bool IsVectorNaN(Vector3 vector) Parameters vector Vector3 Returns bool LengthSquared(Vector3) public static float LengthSquared(Vector3 vector) Parameters vector Vector3 Returns float LineToVector2(string) public static Vector2 LineToVector2(string line) Parameters line string Returns Vector2 LineToVector3(string) public static Vector3 LineToVector3(string line) Parameters line string Returns Vector3 Vector3Max(Vector3, Vector3) public static Vector3 Vector3Max(Vector3 a, Vector3 b) Parameters a Vector3 b Vector3 Returns Vector3 Vector3Min(Vector3, Vector3) public static Vector3 Vector3Min(Vector3 a, Vector3 b) Parameters a Vector3 b Vector3 Returns Vector3"
  },
  "api/Crux.Utilities.Helpers.html": {
    "href": "api/Crux.Utilities.Helpers.html",
    "title": "Namespace Crux.Utilities.Helpers | CruxDocs",
    "summary": "Namespace Crux.Utilities.Helpers Classes ColorHelper MatrixHelper VectorHelper"
  },
  "api/Crux.Utilities.IO.AssetHandler.ShaderPresets.html": {
    "href": "api/Crux.Utilities.IO.AssetHandler.ShaderPresets.html",
    "title": "Enum AssetHandler.ShaderPresets | CruxDocs",
    "summary": "Enum AssetHandler.ShaderPresets Namespace Crux.Utilities.IO Assembly Crux.dll public enum AssetHandler.ShaderPresets Fields Font = 2 Instance_Lit = 1 Lit = 0 Outline = 3 Skybox = 4"
  },
  "api/Crux.Utilities.IO.AssetHandler.html": {
    "href": "api/Crux.Utilities.IO.AssetHandler.html",
    "title": "Class AssetHandler | CruxDocs",
    "summary": "Class AssetHandler Namespace Crux.Utilities.IO Assembly Crux.dll public static class AssetHandler Inheritance object AssetHandler Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields GameAssetPath public static string GameAssetPath Field Value string JsonOptions public static readonly JsonSerializerOptions JsonOptions Field Value JsonSerializerOptions Methods AssetExists(string) public static bool AssetExists(string path) Parameters path string Returns bool GetShortInfo() public static string GetShortInfo() Returns string GetStream(string) public static Stream GetStream(string path) Parameters path string Returns Stream IterateBuildNumber() public static int IterateBuildNumber() Returns int ListAllEmbeddedResources() public static void ListAllEmbeddedResources() LoadIcon() public static WindowIcon LoadIcon() Returns WindowIcon LoadPresetShader(ShaderPresets, string) public static Shader LoadPresetShader(AssetHandler.ShaderPresets shaderPreset, string texturePath = \"\") Parameters shaderPreset AssetHandler.ShaderPresets texturePath string Returns Shader ReadAssetInFull(string) public static string ReadAssetInFull(string path) Parameters path string Returns string"
  },
  "api/Crux.Utilities.IO.GltfHandler.html": {
    "href": "api/Crux.Utilities.IO.GltfHandler.html",
    "title": "Class GltfHandler | CruxDocs",
    "summary": "Class GltfHandler Namespace Crux.Utilities.IO Assembly Crux.dll public static class GltfHandler Inheritance object GltfHandler Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetBufferData<T>(string, JsonNode, int) public static List<T> GetBufferData<T>(string directory, JsonNode rootNode, int accessorIndex) where T : struct Parameters directory string rootNode JsonNode accessorIndex int Returns List<T> Type Parameters T LoadGltfAsEmpties(string) public static Dictionary<string, GameObject>? LoadGltfAsEmpties(string path) Parameters path string Returns Dictionary<string, GameObject> LoadGltfAsEmpty(string) public static GameObject? LoadGltfAsEmpty(string path) Parameters path string Returns GameObject LoadGltfAsMesh(ref string, out Vector3, out Quaternion, out Vector3) public static Mesh? LoadGltfAsMesh(ref string path, out Vector3 objectPosition, out Quaternion objectRotation, out Vector3 objectScale) Parameters path string objectPosition Vector3 objectRotation Quaternion objectScale Vector3 Returns Mesh LoadGltfAsMeshRenderer(string) public static GameObject? LoadGltfAsMeshRenderer(string path) Parameters path string Returns GameObject LoadGltfAsMeshRenderers(string) public static Dictionary<string, GameObject>? LoadGltfAsMeshRenderers(string path) Parameters path string Returns Dictionary<string, GameObject> LoadGltfAsMeshWithMaterials(string, out List<Shader>) public static Mesh? LoadGltfAsMeshWithMaterials(string path, out List<Shader> materials) Parameters path string materials List<Shader> Returns Mesh"
  },
  "api/Crux.Utilities.IO.ObjHandler.html": {
    "href": "api/Crux.Utilities.IO.ObjHandler.html",
    "title": "Class ObjHandler | CruxDocs",
    "summary": "Class ObjHandler Namespace Crux.Utilities.IO Assembly Crux.dll public static class ObjHandler Inheritance object ObjHandler Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields UniqueMeshes public static Dictionary<string, (Mesh mesh, int users)> UniqueMeshes Field Value Dictionary<string, (Mesh mesh, int users)> Methods LoadAsMesh(ref string) public static Mesh LoadAsMesh(ref string path) Parameters path string Returns Mesh LoadObjAsMesh(ref string) public static Mesh LoadObjAsMesh(ref string path) Parameters path string Returns Mesh"
  },
  "api/Crux.Utilities.IO.html": {
    "href": "api/Crux.Utilities.IO.html",
    "title": "Namespace Crux.Utilities.IO | CruxDocs",
    "summary": "Namespace Crux.Utilities.IO Classes AssetHandler GltfHandler ObjHandler Enums AssetHandler.ShaderPresets"
  },
  "api/Crux.Utilities.QuaternionJsonConverter.html": {
    "href": "api/Crux.Utilities.QuaternionJsonConverter.html",
    "title": "Class QuaternionJsonConverter | CruxDocs",
    "summary": "Class QuaternionJsonConverter Namespace Crux.Utilities Assembly Crux.dll public class QuaternionJsonConverter : JsonConverter<Quaternion> Inheritance object JsonConverter JsonConverter<Quaternion> QuaternionJsonConverter Inherited Members JsonConverter<Quaternion>.CanConvert(Type) JsonConverter<Quaternion>.ReadAsPropertyName(ref Utf8JsonReader, Type, JsonSerializerOptions) JsonConverter<Quaternion>.WriteAsPropertyName(Utf8JsonWriter, Quaternion, JsonSerializerOptions) JsonConverter<Quaternion>.HandleNull JsonConverter<Quaternion>.Type object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Read(ref Utf8JsonReader, Type, JsonSerializerOptions) Reads and converts the JSON to type OpenTK.Mathematics.Quaternion. public override Quaternion Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) Parameters reader Utf8JsonReader The reader. typeToConvert Type The type to convert. options JsonSerializerOptions An object that specifies serialization options to use. Returns Quaternion The converted value. Write(Utf8JsonWriter, Quaternion, JsonSerializerOptions) Writes a specified value as JSON. public override void Write(Utf8JsonWriter writer, Quaternion value, JsonSerializerOptions options) Parameters writer Utf8JsonWriter The writer to write to. value Quaternion The value to convert to JSON. options JsonSerializerOptions An object that specifies serialization options to use."
  },
  "api/Crux.Utilities.Vector2JsonConverter.html": {
    "href": "api/Crux.Utilities.Vector2JsonConverter.html",
    "title": "Class Vector2JsonConverter | CruxDocs",
    "summary": "Class Vector2JsonConverter Namespace Crux.Utilities Assembly Crux.dll public class Vector2JsonConverter : JsonConverter<Vector2> Inheritance object JsonConverter JsonConverter<Vector2> Vector2JsonConverter Inherited Members JsonConverter<Vector2>.CanConvert(Type) JsonConverter<Vector2>.ReadAsPropertyName(ref Utf8JsonReader, Type, JsonSerializerOptions) JsonConverter<Vector2>.WriteAsPropertyName(Utf8JsonWriter, Vector2, JsonSerializerOptions) JsonConverter<Vector2>.HandleNull JsonConverter<Vector2>.Type object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Read(ref Utf8JsonReader, Type, JsonSerializerOptions) Reads and converts the JSON to type OpenTK.Mathematics.Vector2. public override Vector2 Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) Parameters reader Utf8JsonReader The reader. typeToConvert Type The type to convert. options JsonSerializerOptions An object that specifies serialization options to use. Returns Vector2 The converted value. Write(Utf8JsonWriter, Vector2, JsonSerializerOptions) Writes a specified value as JSON. public override void Write(Utf8JsonWriter writer, Vector2 value, JsonSerializerOptions options) Parameters writer Utf8JsonWriter The writer to write to. value Vector2 The value to convert to JSON. options JsonSerializerOptions An object that specifies serialization options to use."
  },
  "api/Crux.Utilities.Vector3JsonConverter.html": {
    "href": "api/Crux.Utilities.Vector3JsonConverter.html",
    "title": "Class Vector3JsonConverter | CruxDocs",
    "summary": "Class Vector3JsonConverter Namespace Crux.Utilities Assembly Crux.dll public class Vector3JsonConverter : JsonConverter<Vector3> Inheritance object JsonConverter JsonConverter<Vector3> Vector3JsonConverter Inherited Members JsonConverter<Vector3>.CanConvert(Type) JsonConverter<Vector3>.ReadAsPropertyName(ref Utf8JsonReader, Type, JsonSerializerOptions) JsonConverter<Vector3>.WriteAsPropertyName(Utf8JsonWriter, Vector3, JsonSerializerOptions) JsonConverter<Vector3>.HandleNull JsonConverter<Vector3>.Type object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Read(ref Utf8JsonReader, Type, JsonSerializerOptions) Reads and converts the JSON to type OpenTK.Mathematics.Vector3. public override Vector3 Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) Parameters reader Utf8JsonReader The reader. typeToConvert Type The type to convert. options JsonSerializerOptions An object that specifies serialization options to use. Returns Vector3 The converted value. Write(Utf8JsonWriter, Vector3, JsonSerializerOptions) Writes a specified value as JSON. public override void Write(Utf8JsonWriter writer, Vector3 value, JsonSerializerOptions options) Parameters writer Utf8JsonWriter The writer to write to. value Vector3 The value to convert to JSON. options JsonSerializerOptions An object that specifies serialization options to use."
  },
  "api/Crux.Utilities.VersionData.html": {
    "href": "api/Crux.Utilities.VersionData.html",
    "title": "Struct VersionData | CruxDocs",
    "summary": "Struct VersionData Namespace Crux.Utilities Assembly Crux.dll public struct VersionData Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors VersionData(int, int, int) public VersionData(int major, int minor, int patch) Parameters major int minor int patch int Properties Major public readonly int Major { get; } Property Value int Minor public readonly int Minor { get; } Property Value int Patch public readonly int Patch { get; } Property Value int Methods ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name."
  },
  "api/Crux.Utilities.html": {
    "href": "api/Crux.Utilities.html",
    "title": "Namespace Crux.Utilities | CruxDocs",
    "summary": "Namespace Crux.Utilities Classes Color4JsonConverter QuaternionJsonConverter Vector2JsonConverter Vector3JsonConverter Structs VersionData"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | CruxDocs",
    "summary": "Introduction Crux is a simple GameEngine. It is difficult to import GLTF models unless very specific export settings are configured in Blender. That information will be included in the future."
  },
  "docs/version-history.html": {
    "href": "docs/version-history.html",
    "title": "| CruxDocs",
    "summary": "Required 0.0.1 0.0.1 Version Tracking Before 0.0.1 All features added before 0.0.1 are experimental and are subject to change or removal. Instance Rendering AABB & OBB Physics OBJ & GLTF Importing Octree Frustrum Culling Realtime Point Lighting Text Rendering From Texture Atlas"
  },
  "index.html": {
    "href": "index.html",
    "title": "CruxDocs | CruxDocs",
    "summary": "CruxDocs Visit introduction to learn more about Crux. Visit version-history to view already implemented features."
  }
}